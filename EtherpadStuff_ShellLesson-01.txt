2023-09-18_ClipboardForEtherpad_BoC-ShellLesson.txt

PREP:
- open Firefox with tabs to The Unix Shell Lesson and the wikimedia DSI etherpad
- open Git Bash
- open Zoom app and join a meeting: 
	Meeting ID: 
	Passcode: 



---
Simplified schematic for the layers of the Unix cake top to bottom:

	----------------------------------
	You
	---------------------------------
	terminal emulator (GUI. "MINGW64" 
         for Git Bash on PCs,"Terminal" for Macs)
	----------------------------------
	shell (Unix Bash)
	----------------------------------
	kernel
	----------------------------------
	hardware
	----------------------------------	

---

Directory Structure for shell-lesson-data/

	shell-lesson-data/
			 			 
		exercise-data/

			animal-counts/
			creatures/
			numbers.txt
			proteins/
			writings/
					
		north-pacific-gyre/
		
			goodiff.sh
			goostats.sh
			NENE01729A.txt
			...		(17_NENE*.txt data files in total)
			NENE02043B.txt
			
=====================================================
from etherpad at the end:


----------------------------------------------------
Simplified schematic for the layers of the Unix/shell "cake" top to bottom:

        You

        terminal emulator (GUI. "MINGW64" for Git Bash on PCs,"Terminal" for Macs)

        shell (Unix Bash)

        kernel

        hardware


------------------------------------------------
Syntax (Grammar)

COMMAND [-option(s)/flag(s)] [ARGUMENT(S)]


    options modify your COMMAND

    COMMANDs work on ARGUMENTs


Think of the English language:
VERB [-adverb(s)]  [OBJECT(S)]

------------------------------
Documentation for unix commands,. e.g. for list (ls)
- for Mac: man ls
- for PC: ls --help
- or search on the internet "man unix [your command]"

------------------------------------
Directory Structure for shell-lesson-data/

    shell-lesson-data/
                          

        exercise-data/


                animal-counts/

                creatures/

                numbers.txt

                proteins/

                writings/

                    
        north-pacific-gyre/
        

                goodiff.sh

                goostats.sh

                NENE01729A.txt

                ... (17_datafiles.txt in total)

                NENE02043B.txt


    -----------------------
For PC users: Explanation "MINGW64" in Git Bash default prompt stands
for Minimalist GNU for Windows 64 bits. See good explanation here:
https://www.logicbig.com/tutorials/misc/git/git-bash-shell.html

-------------------------
useful list (ls) flags (see "ls --help" for PCs and "man ls" for Macs for more info)

    ls -l     long format displays more info

    ls -a    list all; including hidden files (which begin with a '.')

    ls -F    catogories listed items with a symbol at the end (/ means it's a directory)

    ls -h    human readable file size display, often used with long format

    ls -R    list recursively, i.e. go through each layer down and list contents there


You can chain multiple flags together:  ls -Flha
You can also use wildcards  (* stands for any number of characters.  ? stands for any ONE character)

    ls *.txt    list all items ending with '.txt'


------------------------------------
Concepts & Commands we covered in today's lesson (did I forget any? if so, please add to list!)

    graphical user interface (GUI)

    command line interface (CLI),  why use it? strengths and weakness (or dangers)

    unix/bash syntax

    the prompt

    **tab completion**  (very useful!)

    pwd

    CTRL+C (cancel), CTRL+X (exit), q (quit)

    pwd   Print working (current) directory

    ls    List and some useful flags/options

    wildcards, esp. '*'  asterisk

    echo (useful for expanding wildcards to see what computer 'sees')

    best practise for filenaming: no spaces in filenames and why. Use hyphens, underscore, camel case, etc instead

    cd      Change directory and some shortcuts:

    cd ~     tilda = home directory (~ stands for home directory)

    cd ..     dot dot =  parent directory (one level up from current/working directory)

    cd .      dot = working directory

    cd -     hyphen = previous directory (not parent but previous)

    paths, absolute and relative

    mkdir

    mv

    cp

    rm

    nano filename.txt

    touch

    wc     word count and flags

    >       Redirect

    cat     concatenate

    less    a pager to see one screen at a time (space bar goes to next page, "b" goes back one page)

    sort    Sort, -n flag for numerical sort, default is alphbetical

    |      Pipe, take out put of one command as the input of the next command in the line

    head     show first 10 lines of a file, flag -n 5 means show first 5 lines

    tail        show last 10 lines of a file, flage -n 5 means show last 5 lines




==============
Useful References and Fun Unix/Bash Links:

Bash Reference Manual
https://www.gnu.org/software/bash/manual/bash.html

Script Ahoy - one line recipies for common tasks, target audience are archivists and librarians, good explanations of the script steps. Try out on sample data files before using them for work purposes.
(bash "recipies" for useful common tasks; some commands, such as "rename" are not in some versions of bash)  
https://dd388.github.io/crals/

Unix for Poets , Kenneth Ward Church - early natural language processing (NLP) with unix but fun lesson on basic text analysis with unix;  some commands may not work in our modern version of bash; author was writing in 19xx and literally working with Unix (not Unix bash); but a fun read
https://web.stanford.edu/class/cs124/kwc-unix-for-poets.pdf
"modern" version: https://ftyers.github.io/079-osnov-programm/classes/01.html

Online Manual for Unix commands - there are lots. Search for "man unix bash" or "man pages unix bash"
https://www.gnu.org/software/bash/manual/bash.html
https://man7.org/linux/man-pages/man1/bash.1.html

File Naming Best Practices
https://datamanagement.hms.harvard.edu/plan-design/file-naming-conventions


===========================================